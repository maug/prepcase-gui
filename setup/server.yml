---
#
# Configure Centos 7 for PrepCASE
#
# Set up server:
# ansible-playbook -i hosts server.yml --skip-tags=deploy
# Deploy code:
# ansible-playbook -i hosts server.yml --tags=deploy
#

- hosts: all
  user: root
  gather_facts: no
  vars:
    server_code_src: ../server/
    server_code_dest:  /var/www/html/prepcase-server
    gui_code_src: ../dist/prepcase-gui/
    gui_code_dest:  /var/www/html/prepcase-gui
    server_http_port: 81

  tasks:

    - name: Upgrade all packages
      yum:
        name: '*'
        state: latest

    - name: Install epel-release (for python-pip)
      yum: name=epel-release state=present

    - name: Install command line tools
      yum:
        state: present
        pkg:
          - python-pip
          - rsync
          - wget
          - git
          - gcc

    - name: Install pipenv
      pip:
        name: pipenv


    - block:
      - name: Install Apache web server
        yum: name=httpd state=present

      - name: Install Python WSGI module for Apache
        yum: name=mod_wsgi state=present

      - name: Enable Rewrite for apache
        apache2_module: name=rewrite state=present

      - name: Delete Apache welcome.conf
        file:
          path: /etc/httpd/conf.d/welcome.conf
          state: absent

      - name: Copy root ssh private key to apache .ssh diretory (to allow apache for ssh-ing to athena & zeus)
        shell: cp ~/.ssh/id_rsa /usr/share/httpd/.ssh/

      - name: Set apache as ssh private key owner
        file:
          path: /usr/share/httpd/.ssh/id_rsa
          owner: apache

      - name: Copy root known_hosts to apache .ssh directory (to allow apache for ssh-ing to athena & zeus)
        shell: cp ~/.ssh/known_hosts /usr/share/httpd/.ssh/

      - name: Apache add listen port {{ server_http_port }}
        lineinfile:
          path: /etc/httpd/conf/httpd.conf
          regexp: '^Listen 81'
          insertafter: '^Listen 80'
          line: Listen 81

      - name: Copy Apache's virtual host file
        copy: src=files/httpd/conf.d/prepcase.conf dest=/etc/httpd/conf.d/ mode=0655

      - name: Enable and restart Apache
        service: name=httpd state=restarted enabled=yes
      tags:
        - apache

    - name: Create /usr/share/httpd/flask_session directory and set access for apache
      file:
        path: /usr/share/httpd/flask_session
        state: directory
        mode: '0770'
        group: apache
      tags:
        - session

    - name: Copy server source code with environment files (pipenv)
      synchronize:
        src: "{{ server_code_src }}"
        dest: "{{ server_code_dest }}"
        delete: yes
        recursive: yes
        archive: no
      tags:
        - deploy

    - name: Create pipenv environment
      shell: "pipenv install"
      args:
        chdir: "{{ server_code_dest }}"
      tags:
        - deploy

    - name: Copy pipenv environment to server docroot
      shell: "cp -r $(pipenv --venv) {{ server_code_dest }}/venv"
      args:
        chdir: "{{ server_code_dest }}"
      tags:
        - deploy

    - name: Copy gui build to server
      synchronize:
        src: "{{ gui_code_src }}"
        dest: "{{ gui_code_dest }}"
        delete: yes
        recursive: yes
        archive: no
      tags:
        - deploy

  handlers:
    - name: restart apache
      action: service name=httpd state=restarted

